{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOlcarkpK+UF2UoYLtlqnKT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# What is Phishing Threat?\n","<mark>**Phishing**</mark> is a type of <mark>cyber threat</mark> that involves the use of deceptive techniques to trick individuals into divulging sensitive information such as passwords, credit card numbers, or personal identification details. Typically, perpetrators masquerade as trustworthy entities, such as banks, government agencies, or reputable organizations, and attempt to lure targets into clicking on malicious links or providing confidential information through email, instant messaging, or other communication channels.\n","\n","Phishing attacks often employ various tactics to manipulate victims, such as creating urgent scenarios that demand immediate action or crafting messages that appear legitimate through the use of logos, language, and formatting similar to those used by the impersonated organization. Once the victim takes the bait and shares their sensitive information, it can be exploited for fraudulent activities like identity theft, financial fraud, or unauthorized access to accounts.\n","\n","Phishing threats continue to evolve, with perpetrators employing increasingly sophisticated techniques, including spear phishing (targeting specific individuals or organizations), pharming (redirecting users to fake websites), and vishing (using voice communication to deceive targets). Countermeasures against phishing include user education, email filtering systems, multi-factor authentication, and vigilance in scrutinizing incoming communications for signs of suspicious activity."],"metadata":{"id":"Glrf7umI1zwP"}},{"cell_type":"markdown","source":["# About Data\n","Here's how we could interpret each column:\n","\n","- `Domain_Age`: Age of the domain, which can be a factor in determining the legitimacy of a website. New domains may raise suspicions.\n","- `sld`: Second-level domain, often the main part of the domain name.\n","- `oc_8`: Occurrences of specific patterns in the domain name or URL.\n","- `Emails`: Presence of email addresses associated with the domain.\n","- `hex_32`: Presence of hexadecimal strings in the domain.\n","- `Domain_Name`: The full domain name.\n","- `puny_coded`: Whether the domain name is puny coded, which can be used in phishing attacks to spoof legitimate domains.\n","- `Page_Rank`: Page rank of the website, indicating its popularity or authority.\n","- `Alexa_Rank`: Alexa rank of the website, providing insight into its web traffic.\n","- `3gram`, `2gram`, `1gram`: Presence of specific n-grams in the domain name or URL.\n","- `distance_from_bad_words`: Distance of the domain from known bad words or patterns.\n","- `Country`, `State`: Geographic location of the domain.\n","- `hex_8`, `oc_32`, `len`, `typos`, `Registrar`, `dec_8`, `obfuscate_at_sign`, `entropy`, `numeric_percentage`, `Registrant_Name`, `subdomain`, `char_distribution`, `shortened`, `longest_word`, `Name_Server_Count`, `dec_32`: Various other features related to the structure and characteristics of the domain.\n","- `Creation_Date_Time`: Date and time when the domain was created.\n","- `Organization`: Organization associated with the domain.\n","- `tld`: Top-level domain.\n","- `label`: Indicates whether the instance is labeled as a phishing threat or not.\n","\n","This dataset appears to be rich in features that could be used to train machine learning models to classify domains as potential phishing threats or not. Each feature provides valuable information that could contribute to the model's decision-making process."],"metadata":{"id":"WqKC-lVw2Smp"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uxb6UFqycR9k","executionInfo":{"status":"ok","timestamp":1708074405921,"user_tz":-300,"elapsed":46260,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"fbd7afbf-920a-4edc-f43e-b1aa5f17b3a3"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import pandas as pd\n","pd.set_option('display.max_columns', None)\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import plotly.express as px"],"metadata":{"id":"CxltHcljcjxT","executionInfo":{"status":"ok","timestamp":1708074425620,"user_tz":-300,"elapsed":1575,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df = pd.read_excel(\"/content/drive/MyDrive/Project collaboration/cleaned_data.xlsx\")"],"metadata":{"id":"t4R43LVKdT2c","executionInfo":{"status":"ok","timestamp":1708074455140,"user_tz":-300,"elapsed":28949,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"g6e0kxN4dYEc","colab":{"base_uri":"https://localhost:8080/","height":660},"executionInfo":{"status":"ok","timestamp":1708074455143,"user_tz":-300,"elapsed":86,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"55d4d2fc-4739-4e60-bebf-60d859495af7"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Domain_Age      sld  oc_8  \\\n","0    136 days, 2:56:04.883605   900259     0   \n","1    136 days, 2:56:19.517778  koitera     0   \n","2  1282 days, 10:44:37.906362  koitera     0   \n","3  1282 days, 10:44:39.322353  koitera     0   \n","4    136 days, 2:56:20.715816   901360     0   \n","\n","                                              Emails  hex_32  \\\n","0  ['abuse@gmo.jp', 'proxy@whoisprotectservice.com']       0   \n","1  ['abuse@gmo.jp', 'proxy@whoisprotectservice.com']       0   \n","2  ['abuse@gmo.jp', 'proxy@whoisprotectservice.com']       0   \n","3  ['abuse@gmo.jp', 'proxy@whoisprotectservice.com']       0   \n","4  ['abuse@gmo.jp', 'proxy@whoisprotectservice.com']       0   \n","\n","                      Domain_Name  puny_coded  Page_Rank  Alexa_Rank  \\\n","0  ['0900259.COM', '0900259.com']           0         -1        -1.0   \n","1  ['KOITERA.NET', 'koitera.net']           0         -1        -1.0   \n","2  ['KOITERA.COM', 'koitera.com']           0         -1   7119972.0   \n","3  ['KOITERA.COM', 'koitera.com']           0         -1   7119972.0   \n","4  ['0901360.COM', '0901360.com']           0         -1        -1.0   \n","\n","                                 3gram  \\\n","0  ['090', '900', '002', '025', '259']   \n","1  ['koi', 'oit', 'ite', 'ter', 'era']   \n","2  ['koi', 'oit', 'ite', 'ter', 'era']   \n","3  ['koi', 'oit', 'ite', 'ter', 'era']   \n","4  ['090', '901', '013', '136', '360']   \n","\n","                             distance_from_bad_words Country  hex_8  oc_32  \\\n","0  {'2': 5.740530303030303, '0': 5.74431818181818...      JP      0      0   \n","1  {'ko': 5.331439393939394, 'it': 5.178030303030...      JP      0      0   \n","2  {'ko': 5.331439393939394, 'it': 5.178030303030...      JP      0      0   \n","3  {'ko': 5.331439393939394, 'it': 5.178030303030...      JP      0      0   \n","4  {'3': 5.744318181818182, '6': 5.74431818181818...      JP      0      0   \n","\n","   len                              typos           Registrar  dec_8  \\\n","0    8   [('qq.com', 86), ('vk.com', 86)]  GMO INTERNET, INC.      0   \n","1    8  [('php.net', 86), ('a8.net', 86)]  GMO INTERNET, INC.      0   \n","2    8   [('qq.com', 86), ('vk.com', 86)]  GMO INTERNET, INC.      0   \n","3   10   [('qq.com', 86), ('vk.com', 86)]  GMO INTERNET, INC.      0   \n","4    8   [('qq.com', 86), ('vk.com', 86)]  GMO INTERNET, INC.      0   \n","\n","                                  2gram  State  \\\n","0  ['09', '90', '00', '02', '25', '59']  Tokyo   \n","1  ['ko', 'oi', 'it', 'te', 'er', 'ra']  Tokyo   \n","2  ['ko', 'oi', 'it', 'te', 'er', 'ra']  Tokyo   \n","3  ['ko', 'oi', 'it', 'te', 'er', 'ra']  Tokyo   \n","4  ['09', '90', '01', '13', '36', '60']  Tokyo   \n","\n","                                 1gram obfuscate_at_sign   entropy  \\\n","0  ['0', '9', '0', '0', '2', '5', '9']                 0  1.780639   \n","1  ['k', 'o', 'i', 't', 'e', 'r', 'a']                 0  2.625000   \n","2  ['k', 'o', 'i', 't', 'e', 'r', 'a']                 0  2.625000   \n","3  ['k', 'o', 'i', 't', 'e', 'r', 'a']                 0  2.989735   \n","4  ['0', '9', '0', '1', '3', '6', '0']                 0  2.030639   \n","\n","   numeric_percentage       Registrant_Name  subdomain  \\\n","0           53.846154  REDACTED FOR PRIVACY        0.0   \n","1            0.000000  REDACTED FOR PRIVACY        0.0   \n","2            0.000000  REDACTED FOR PRIVACY        0.0   \n","3            0.000000  REDACTED FOR PRIVACY        1.0   \n","4           53.846154  REDACTED FOR PRIVACY        0.0   \n","\n","                                   char_distribution shortened longest_word  \\\n","0  defaultdict(<class 'int'>, {'2': 1, '9': 2, '0...        -1            9   \n","1  defaultdict(<class 'int'>, {'k': 1, 'a': 1, 'o...        -1          era   \n","2  defaultdict(<class 'int'>, {'k': 1, 'a': 1, 'o...        -1          era   \n","3  defaultdict(<class 'int'>, {'k': 1, 'p': 1, 'o...        -1          era   \n","4  defaultdict(<class 'int'>, {'3': 1, '6': 1, '9...        -1            0   \n","\n","  Name_Server_Count  dec_32   Creation_Date_Time  \\\n","0                 4       0  2019-06-11 12:32:01   \n","1                 8       0  2019-06-11 12:31:48   \n","2                 8       0  2016-04-21 04:43:31   \n","3                 8       0  2016-04-21 04:43:31   \n","4                 4       0  2019-06-11 12:31:51   \n","\n","                                     Organization  tld label  \n","0  Whois Privacy Protection Service by onamae.com  com  spam  \n","1  Whois Privacy Protection Service by onamae.com  net  spam  \n","2  Whois Privacy Protection Service by onamae.com  com  spam  \n","3  Whois Privacy Protection Service by onamae.com  com  spam  \n","4  Whois Privacy Protection Service by onamae.com  com  spam  "],"text/html":["\n","  <div id=\"df-7a8ed170-d3de-4362-9598-9efb45d7df7f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Domain_Age</th>\n","      <th>sld</th>\n","      <th>oc_8</th>\n","      <th>Emails</th>\n","      <th>hex_32</th>\n","      <th>Domain_Name</th>\n","      <th>puny_coded</th>\n","      <th>Page_Rank</th>\n","      <th>Alexa_Rank</th>\n","      <th>3gram</th>\n","      <th>distance_from_bad_words</th>\n","      <th>Country</th>\n","      <th>hex_8</th>\n","      <th>oc_32</th>\n","      <th>len</th>\n","      <th>typos</th>\n","      <th>Registrar</th>\n","      <th>dec_8</th>\n","      <th>2gram</th>\n","      <th>State</th>\n","      <th>1gram</th>\n","      <th>obfuscate_at_sign</th>\n","      <th>entropy</th>\n","      <th>numeric_percentage</th>\n","      <th>Registrant_Name</th>\n","      <th>subdomain</th>\n","      <th>char_distribution</th>\n","      <th>shortened</th>\n","      <th>longest_word</th>\n","      <th>Name_Server_Count</th>\n","      <th>dec_32</th>\n","      <th>Creation_Date_Time</th>\n","      <th>Organization</th>\n","      <th>tld</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>136 days, 2:56:04.883605</td>\n","      <td>900259</td>\n","      <td>0</td>\n","      <td>['abuse@gmo.jp', 'proxy@whoisprotectservice.com']</td>\n","      <td>0</td>\n","      <td>['0900259.COM', '0900259.com']</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>-1.0</td>\n","      <td>['090', '900', '002', '025', '259']</td>\n","      <td>{'2': 5.740530303030303, '0': 5.74431818181818...</td>\n","      <td>JP</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>[('qq.com', 86), ('vk.com', 86)]</td>\n","      <td>GMO INTERNET, INC.</td>\n","      <td>0</td>\n","      <td>['09', '90', '00', '02', '25', '59']</td>\n","      <td>Tokyo</td>\n","      <td>['0', '9', '0', '0', '2', '5', '9']</td>\n","      <td>0</td>\n","      <td>1.780639</td>\n","      <td>53.846154</td>\n","      <td>REDACTED FOR PRIVACY</td>\n","      <td>0.0</td>\n","      <td>defaultdict(&lt;class 'int'&gt;, {'2': 1, '9': 2, '0...</td>\n","      <td>-1</td>\n","      <td>9</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2019-06-11 12:32:01</td>\n","      <td>Whois Privacy Protection Service by onamae.com</td>\n","      <td>com</td>\n","      <td>spam</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>136 days, 2:56:19.517778</td>\n","      <td>koitera</td>\n","      <td>0</td>\n","      <td>['abuse@gmo.jp', 'proxy@whoisprotectservice.com']</td>\n","      <td>0</td>\n","      <td>['KOITERA.NET', 'koitera.net']</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>-1.0</td>\n","      <td>['koi', 'oit', 'ite', 'ter', 'era']</td>\n","      <td>{'ko': 5.331439393939394, 'it': 5.178030303030...</td>\n","      <td>JP</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>[('php.net', 86), ('a8.net', 86)]</td>\n","      <td>GMO INTERNET, INC.</td>\n","      <td>0</td>\n","      <td>['ko', 'oi', 'it', 'te', 'er', 'ra']</td>\n","      <td>Tokyo</td>\n","      <td>['k', 'o', 'i', 't', 'e', 'r', 'a']</td>\n","      <td>0</td>\n","      <td>2.625000</td>\n","      <td>0.000000</td>\n","      <td>REDACTED FOR PRIVACY</td>\n","      <td>0.0</td>\n","      <td>defaultdict(&lt;class 'int'&gt;, {'k': 1, 'a': 1, 'o...</td>\n","      <td>-1</td>\n","      <td>era</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>2019-06-11 12:31:48</td>\n","      <td>Whois Privacy Protection Service by onamae.com</td>\n","      <td>net</td>\n","      <td>spam</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1282 days, 10:44:37.906362</td>\n","      <td>koitera</td>\n","      <td>0</td>\n","      <td>['abuse@gmo.jp', 'proxy@whoisprotectservice.com']</td>\n","      <td>0</td>\n","      <td>['KOITERA.COM', 'koitera.com']</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>7119972.0</td>\n","      <td>['koi', 'oit', 'ite', 'ter', 'era']</td>\n","      <td>{'ko': 5.331439393939394, 'it': 5.178030303030...</td>\n","      <td>JP</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>[('qq.com', 86), ('vk.com', 86)]</td>\n","      <td>GMO INTERNET, INC.</td>\n","      <td>0</td>\n","      <td>['ko', 'oi', 'it', 'te', 'er', 'ra']</td>\n","      <td>Tokyo</td>\n","      <td>['k', 'o', 'i', 't', 'e', 'r', 'a']</td>\n","      <td>0</td>\n","      <td>2.625000</td>\n","      <td>0.000000</td>\n","      <td>REDACTED FOR PRIVACY</td>\n","      <td>0.0</td>\n","      <td>defaultdict(&lt;class 'int'&gt;, {'k': 1, 'a': 1, 'o...</td>\n","      <td>-1</td>\n","      <td>era</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>2016-04-21 04:43:31</td>\n","      <td>Whois Privacy Protection Service by onamae.com</td>\n","      <td>com</td>\n","      <td>spam</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1282 days, 10:44:39.322353</td>\n","      <td>koitera</td>\n","      <td>0</td>\n","      <td>['abuse@gmo.jp', 'proxy@whoisprotectservice.com']</td>\n","      <td>0</td>\n","      <td>['KOITERA.COM', 'koitera.com']</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>7119972.0</td>\n","      <td>['koi', 'oit', 'ite', 'ter', 'era']</td>\n","      <td>{'ko': 5.331439393939394, 'it': 5.178030303030...</td>\n","      <td>JP</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>[('qq.com', 86), ('vk.com', 86)]</td>\n","      <td>GMO INTERNET, INC.</td>\n","      <td>0</td>\n","      <td>['ko', 'oi', 'it', 'te', 'er', 'ra']</td>\n","      <td>Tokyo</td>\n","      <td>['k', 'o', 'i', 't', 'e', 'r', 'a']</td>\n","      <td>0</td>\n","      <td>2.989735</td>\n","      <td>0.000000</td>\n","      <td>REDACTED FOR PRIVACY</td>\n","      <td>1.0</td>\n","      <td>defaultdict(&lt;class 'int'&gt;, {'k': 1, 'p': 1, 'o...</td>\n","      <td>-1</td>\n","      <td>era</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>2016-04-21 04:43:31</td>\n","      <td>Whois Privacy Protection Service by onamae.com</td>\n","      <td>com</td>\n","      <td>spam</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>136 days, 2:56:20.715816</td>\n","      <td>901360</td>\n","      <td>0</td>\n","      <td>['abuse@gmo.jp', 'proxy@whoisprotectservice.com']</td>\n","      <td>0</td>\n","      <td>['0901360.COM', '0901360.com']</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>-1.0</td>\n","      <td>['090', '901', '013', '136', '360']</td>\n","      <td>{'3': 5.744318181818182, '6': 5.74431818181818...</td>\n","      <td>JP</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>[('qq.com', 86), ('vk.com', 86)]</td>\n","      <td>GMO INTERNET, INC.</td>\n","      <td>0</td>\n","      <td>['09', '90', '01', '13', '36', '60']</td>\n","      <td>Tokyo</td>\n","      <td>['0', '9', '0', '1', '3', '6', '0']</td>\n","      <td>0</td>\n","      <td>2.030639</td>\n","      <td>53.846154</td>\n","      <td>REDACTED FOR PRIVACY</td>\n","      <td>0.0</td>\n","      <td>defaultdict(&lt;class 'int'&gt;, {'3': 1, '6': 1, '9...</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2019-06-11 12:31:51</td>\n","      <td>Whois Privacy Protection Service by onamae.com</td>\n","      <td>com</td>\n","      <td>spam</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a8ed170-d3de-4362-9598-9efb45d7df7f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7a8ed170-d3de-4362-9598-9efb45d7df7f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7a8ed170-d3de-4362-9598-9efb45d7df7f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e2143f5e-bbc6-4b43-87eb-4a9dcbad2419\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e2143f5e-bbc6-4b43-87eb-4a9dcbad2419')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e2143f5e-bbc6-4b43-87eb-4a9dcbad2419 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.shape"],"metadata":{"id":"0Me39fPreOKl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708074455143,"user_tz":-300,"elapsed":31,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"7a5281f9-4813-4218-b9ad-39b08520702f"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(50159, 35)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["((df.isnull().sum())/len(df))*100"],"metadata":{"id":"misZciPefcYu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708074455144,"user_tz":-300,"elapsed":21,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"efa293a1-869d-46b9-b697-a9830e6db9ee"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Domain_Age                 0.0\n","sld                        0.0\n","oc_8                       0.0\n","Emails                     0.0\n","hex_32                     0.0\n","Domain_Name                0.0\n","puny_coded                 0.0\n","Page_Rank                  0.0\n","Alexa_Rank                 0.0\n","3gram                      0.0\n","distance_from_bad_words    0.0\n","Country                    0.0\n","hex_8                      0.0\n","oc_32                      0.0\n","len                        0.0\n","typos                      0.0\n","Registrar                  0.0\n","dec_8                      0.0\n","2gram                      0.0\n","State                      0.0\n","1gram                      0.0\n","obfuscate_at_sign          0.0\n","entropy                    0.0\n","numeric_percentage         0.0\n","Registrant_Name            0.0\n","subdomain                  0.0\n","char_distribution          0.0\n","shortened                  0.0\n","longest_word               0.0\n","Name_Server_Count          0.0\n","dec_32                     0.0\n","Creation_Date_Time         0.0\n","Organization               0.0\n","tld                        0.0\n","label                      0.0\n","dtype: float64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"vK7YkWAlhdYr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708074456163,"user_tz":-300,"elapsed":1035,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"22a8b7be-d1e9-4189-8056-f7ced7bb5226"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 50159 entries, 0 to 50158\n","Data columns (total 35 columns):\n"," #   Column                   Non-Null Count  Dtype  \n","---  ------                   --------------  -----  \n"," 0   Domain_Age               50159 non-null  object \n"," 1   sld                      50159 non-null  object \n"," 2   oc_8                     50159 non-null  int64  \n"," 3   Emails                   50159 non-null  object \n"," 4   hex_32                   50159 non-null  int64  \n"," 5   Domain_Name              50159 non-null  object \n"," 6   puny_coded               50159 non-null  int64  \n"," 7   Page_Rank                50159 non-null  int64  \n"," 8   Alexa_Rank               50159 non-null  float64\n"," 9   3gram                    50159 non-null  object \n"," 10  distance_from_bad_words  50159 non-null  object \n"," 11  Country                  50159 non-null  object \n"," 12  hex_8                    50159 non-null  int64  \n"," 13  oc_32                    50159 non-null  int64  \n"," 14  len                      50159 non-null  int64  \n"," 15  typos                    50159 non-null  object \n"," 16  Registrar                50159 non-null  object \n"," 17  dec_8                    50159 non-null  int64  \n"," 18  2gram                    50159 non-null  object \n"," 19  State                    50159 non-null  object \n"," 20  1gram                    50159 non-null  object \n"," 21  obfuscate_at_sign        50159 non-null  object \n"," 22  entropy                  50159 non-null  float64\n"," 23  numeric_percentage       50159 non-null  float64\n"," 24  Registrant_Name          50159 non-null  object \n"," 25  subdomain                50159 non-null  float64\n"," 26  char_distribution        50159 non-null  object \n"," 27  shortened                50159 non-null  object \n"," 28  longest_word             50159 non-null  object \n"," 29  Name_Server_Count        50159 non-null  object \n"," 30  dec_32                   50159 non-null  int64  \n"," 31  Creation_Date_Time       50159 non-null  object \n"," 32  Organization             50159 non-null  object \n"," 33  tld                      50159 non-null  object \n"," 34  label                    50159 non-null  object \n","dtypes: float64(4), int64(9), object(22)\n","memory usage: 13.4+ MB\n"]}]},{"cell_type":"code","source":["categorical_cols = df.select_dtypes(include=['object']).columns.tolist()\n","categorical_cols"],"metadata":{"id":"GEAp9RqNfm7t","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708074456164,"user_tz":-300,"elapsed":200,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"1f787951-0be1-4410-f5a9-227147c4b51b"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Domain_Age',\n"," 'sld',\n"," 'Emails',\n"," 'Domain_Name',\n"," '3gram',\n"," 'distance_from_bad_words',\n"," 'Country',\n"," 'typos',\n"," 'Registrar',\n"," '2gram',\n"," 'State',\n"," '1gram',\n"," 'obfuscate_at_sign',\n"," 'Registrant_Name',\n"," 'char_distribution',\n"," 'shortened',\n"," 'longest_word',\n"," 'Name_Server_Count',\n"," 'Creation_Date_Time',\n"," 'Organization',\n"," 'tld',\n"," 'label']"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["numerical_cols = df.select_dtypes(include=['int64', 'float64']).columns.tolist()\n","numerical_cols"],"metadata":{"id":"nKz8cM2nhV9k","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708074456164,"user_tz":-300,"elapsed":189,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"2751ea99-174e-4544-9223-bef373eeef2a"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['oc_8',\n"," 'hex_32',\n"," 'puny_coded',\n"," 'Page_Rank',\n"," 'Alexa_Rank',\n"," 'hex_8',\n"," 'oc_32',\n"," 'len',\n"," 'dec_8',\n"," 'entropy',\n"," 'numeric_percentage',\n"," 'subdomain',\n"," 'dec_32']"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df[numerical_cols].cov()"],"metadata":{"id":"rGa-Mf_wEv7S","colab":{"base_uri":"https://localhost:8080/","height":457},"executionInfo":{"status":"ok","timestamp":1708074456166,"user_tz":-300,"elapsed":185,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"4dc202a0-8acf-4132-f778-fe8191a2977b"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    oc_8  hex_32    puny_coded  Page_Rank    Alexa_Rank  \\\n","oc_8                 0.0     0.0  0.000000e+00        0.0  0.000000e+00   \n","hex_32               0.0     0.0  0.000000e+00        0.0  0.000000e+00   \n","puny_coded           0.0     0.0  4.682994e-03        0.0 -3.002332e+03   \n","Page_Rank            0.0     0.0  0.000000e+00        0.0  0.000000e+00   \n","Alexa_Rank           0.0     0.0 -3.002332e+03        0.0  3.907441e+12   \n","hex_8                0.0     0.0  0.000000e+00        0.0  0.000000e+00   \n","oc_32                0.0     0.0 -3.752174e-07        0.0 -4.239747e+01   \n","len                  0.0     0.0  1.016979e-02        0.0 -3.487781e+05   \n","dec_8                0.0     0.0  0.000000e+00        0.0  0.000000e+00   \n","entropy              0.0     0.0  2.251160e-03        0.0  1.900666e+04   \n","numeric_percentage   0.0     0.0  4.230893e-02        0.0 -5.947470e+05   \n","subdomain            0.0     0.0 -2.091274e-03        0.0 -6.766032e+04   \n","dec_32               0.0     0.0 -2.082456e-05        0.0 -8.488771e+02   \n","\n","                    hex_8         oc_32            len  dec_8       entropy  \\\n","oc_8                  0.0  0.000000e+00       0.000000    0.0      0.000000   \n","hex_32                0.0  0.000000e+00       0.000000    0.0      0.000000   \n","puny_coded            0.0 -3.752174e-07       0.010170    0.0      0.002251   \n","Page_Rank             0.0  0.000000e+00       0.000000    0.0      0.000000   \n","Alexa_Rank            0.0 -4.239747e+01 -348778.124499    0.0  19006.655059   \n","hex_8                 0.0  0.000000e+00       0.000000    0.0      0.000000   \n","oc_32                 0.0  7.974164e-05      -0.000580    0.0     -0.000067   \n","len                   0.0 -5.798301e-04      50.413738    0.0      3.484792   \n","dec_8                 0.0  0.000000e+00       0.000000    0.0      0.000000   \n","entropy               0.0 -6.667735e-05       3.484792    0.0      0.372322   \n","numeric_percentage    0.0  2.960336e-03      12.068714    0.0      0.540982   \n","subdomain             0.0 -1.550832e-05       1.216102    0.0      0.065474   \n","dec_32                0.0 -3.529587e-07      -0.025083    0.0     -0.005189   \n","\n","                    numeric_percentage     subdomain        dec_32  \n","oc_8                          0.000000      0.000000  0.000000e+00  \n","hex_32                        0.000000      0.000000  0.000000e+00  \n","puny_coded                    0.042309     -0.002091 -2.082456e-05  \n","Page_Rank                     0.000000      0.000000  0.000000e+00  \n","Alexa_Rank              -594747.039323 -67660.318164 -8.488771e+02  \n","hex_8                         0.000000      0.000000  0.000000e+00  \n","oc_32                         0.002960     -0.000016 -3.529587e-07  \n","len                          12.068714      1.216102 -2.508300e-02  \n","dec_8                         0.000000      0.000000  0.000000e+00  \n","entropy                       0.540982      0.065474 -5.188725e-03  \n","numeric_percentage           48.788973      0.169266  1.424681e-01  \n","subdomain                     0.169266      0.246877 -4.121135e-04  \n","dec_32                        0.142468     -0.000412  6.559620e-03  "],"text/html":["\n","  <div id=\"df-974ca9d8-be5f-4f7e-9c7f-ba8f1af9c5fd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>oc_8</th>\n","      <th>hex_32</th>\n","      <th>puny_coded</th>\n","      <th>Page_Rank</th>\n","      <th>Alexa_Rank</th>\n","      <th>hex_8</th>\n","      <th>oc_32</th>\n","      <th>len</th>\n","      <th>dec_8</th>\n","      <th>entropy</th>\n","      <th>numeric_percentage</th>\n","      <th>subdomain</th>\n","      <th>dec_32</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>oc_8</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>hex_32</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>puny_coded</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.682994e-03</td>\n","      <td>0.0</td>\n","      <td>-3.002332e+03</td>\n","      <td>0.0</td>\n","      <td>-3.752174e-07</td>\n","      <td>0.010170</td>\n","      <td>0.0</td>\n","      <td>0.002251</td>\n","      <td>0.042309</td>\n","      <td>-0.002091</td>\n","      <td>-2.082456e-05</td>\n","    </tr>\n","    <tr>\n","      <th>Page_Rank</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Alexa_Rank</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-3.002332e+03</td>\n","      <td>0.0</td>\n","      <td>3.907441e+12</td>\n","      <td>0.0</td>\n","      <td>-4.239747e+01</td>\n","      <td>-348778.124499</td>\n","      <td>0.0</td>\n","      <td>19006.655059</td>\n","      <td>-594747.039323</td>\n","      <td>-67660.318164</td>\n","      <td>-8.488771e+02</td>\n","    </tr>\n","    <tr>\n","      <th>hex_8</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>oc_32</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-3.752174e-07</td>\n","      <td>0.0</td>\n","      <td>-4.239747e+01</td>\n","      <td>0.0</td>\n","      <td>7.974164e-05</td>\n","      <td>-0.000580</td>\n","      <td>0.0</td>\n","      <td>-0.000067</td>\n","      <td>0.002960</td>\n","      <td>-0.000016</td>\n","      <td>-3.529587e-07</td>\n","    </tr>\n","    <tr>\n","      <th>len</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.016979e-02</td>\n","      <td>0.0</td>\n","      <td>-3.487781e+05</td>\n","      <td>0.0</td>\n","      <td>-5.798301e-04</td>\n","      <td>50.413738</td>\n","      <td>0.0</td>\n","      <td>3.484792</td>\n","      <td>12.068714</td>\n","      <td>1.216102</td>\n","      <td>-2.508300e-02</td>\n","    </tr>\n","    <tr>\n","      <th>dec_8</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>entropy</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.251160e-03</td>\n","      <td>0.0</td>\n","      <td>1.900666e+04</td>\n","      <td>0.0</td>\n","      <td>-6.667735e-05</td>\n","      <td>3.484792</td>\n","      <td>0.0</td>\n","      <td>0.372322</td>\n","      <td>0.540982</td>\n","      <td>0.065474</td>\n","      <td>-5.188725e-03</td>\n","    </tr>\n","    <tr>\n","      <th>numeric_percentage</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.230893e-02</td>\n","      <td>0.0</td>\n","      <td>-5.947470e+05</td>\n","      <td>0.0</td>\n","      <td>2.960336e-03</td>\n","      <td>12.068714</td>\n","      <td>0.0</td>\n","      <td>0.540982</td>\n","      <td>48.788973</td>\n","      <td>0.169266</td>\n","      <td>1.424681e-01</td>\n","    </tr>\n","    <tr>\n","      <th>subdomain</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-2.091274e-03</td>\n","      <td>0.0</td>\n","      <td>-6.766032e+04</td>\n","      <td>0.0</td>\n","      <td>-1.550832e-05</td>\n","      <td>1.216102</td>\n","      <td>0.0</td>\n","      <td>0.065474</td>\n","      <td>0.169266</td>\n","      <td>0.246877</td>\n","      <td>-4.121135e-04</td>\n","    </tr>\n","    <tr>\n","      <th>dec_32</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-2.082456e-05</td>\n","      <td>0.0</td>\n","      <td>-8.488771e+02</td>\n","      <td>0.0</td>\n","      <td>-3.529587e-07</td>\n","      <td>-0.025083</td>\n","      <td>0.0</td>\n","      <td>-0.005189</td>\n","      <td>0.142468</td>\n","      <td>-0.000412</td>\n","      <td>6.559620e-03</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-974ca9d8-be5f-4f7e-9c7f-ba8f1af9c5fd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-974ca9d8-be5f-4f7e-9c7f-ba8f1af9c5fd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-974ca9d8-be5f-4f7e-9c7f-ba8f1af9c5fd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-489271ee-b168-4da9-b9f8-060867324fe2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-489271ee-b168-4da9-b9f8-060867324fe2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-489271ee-b168-4da9-b9f8-060867324fe2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[numerical_cols]\",\n  \"rows\": 13,\n  \"fields\": [\n    {\n      \"column\": \"oc_8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"samples\": [\n          0.0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hex_32\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"samples\": [\n          0.0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"puny_coded\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 832.6983573902907,\n        \"min\": -3002.3318492344774,\n        \"max\": 0.04230892822510922,\n        \"samples\": [\n          -0.002091273927330803\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Page_Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"samples\": [\n          0.0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Alexa_Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1083729266803.2991,\n        \"min\": -594747.0393229036,\n        \"max\": 3907441357174.1978,\n        \"samples\": [\n          -67660.31816440888\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hex_8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"samples\": [\n          0.0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oc_32\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.758996145640983,\n        \"min\": -42.39746532952554,\n        \"max\": 0.0029603364827140307,\n        \"samples\": [\n          -1.5508321719319155e-05\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"len\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 96735.2004684155,\n        \"min\": -348778.1244994647,\n        \"max\": 50.41373820063553,\n        \"samples\": [\n          1.2161021938371657\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dec_8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"samples\": [\n          0.0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"entropy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5271.394636859707,\n        \"min\": -0.005188725301581009,\n        \"max\": 19006.65505896926,\n        \"samples\": [\n          0.06547394260391015\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"numeric_percentage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 164954.57759474913,\n        \"min\": -594747.0393229036,\n        \"max\": 48.78897308327687,\n        \"samples\": [\n          0.16926606837329405\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subdomain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18765.635064513113,\n        \"min\": -67660.31816440888,\n        \"max\": 1.2161021938371657,\n        \"samples\": [\n          0.2468766593874439\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dec_32\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 235.43888493416512,\n        \"min\": -848.8770989854328,\n        \"max\": 0.14246814696611623,\n        \"samples\": [\n          -0.000412113474163418\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.columns"],"metadata":{"id":"UFIYhKis1n8K","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708074456170,"user_tz":-300,"elapsed":184,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"1ccd97c9-06bd-4a64-823d-7d9d7cd80f71"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Domain_Age', 'sld', 'oc_8', 'Emails', 'hex_32', 'Domain_Name',\n","       'puny_coded', 'Page_Rank', 'Alexa_Rank', '3gram',\n","       'distance_from_bad_words', 'Country', 'hex_8', 'oc_32', 'len', 'typos',\n","       'Registrar', 'dec_8', '2gram', 'State', '1gram', 'obfuscate_at_sign',\n","       'entropy', 'numeric_percentage', 'Registrant_Name', 'subdomain',\n","       'char_distribution', 'shortened', 'longest_word', 'Name_Server_Count',\n","       'dec_32', 'Creation_Date_Time', 'Organization', 'tld', 'label'],\n","      dtype='object')"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["for col in categorical_cols:\n","  unique_values = df[col].nunique()\n","  print(f\"Column '{col}' has '{unique_values}' unique values.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n6D9wx-p1pMs","executionInfo":{"status":"ok","timestamp":1708074456171,"user_tz":-300,"elapsed":177,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"bfdef85c-b450-4f0d-8f49-551198bbc7d8"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Column 'Domain_Age' has '40148' unique values.\n","Column 'sld' has '16338' unique values.\n","Column 'Emails' has '5494' unique values.\n","Column 'Domain_Name' has '14915' unique values.\n","Column '3gram' has '16180' unique values.\n","Column 'distance_from_bad_words' has '16393' unique values.\n","Column 'Country' has '217' unique values.\n","Column 'typos' has '3184' unique values.\n","Column 'Registrar' has '1034' unique values.\n","Column '2gram' has '16330' unique values.\n","Column 'State' has '1300' unique values.\n","Column '1gram' has '16340' unique values.\n","Column 'obfuscate_at_sign' has '2' unique values.\n","Column 'Registrant_Name' has '437' unique values.\n","Column 'char_distribution' has '23066' unique values.\n","Column 'shortened' has '3' unique values.\n","Column 'longest_word' has '8489' unique values.\n","Column 'Name_Server_Count' has '59' unique values.\n","Column 'Creation_Date_Time' has '12550' unique values.\n","Column 'Organization' has '4043' unique values.\n","Column 'tld' has '447' unique values.\n","Column 'label' has '4' unique values.\n"]}]},{"cell_type":"code","source":["for col in numerical_cols:\n","  unique_values = df[col].nunique()\n","  print(f\"Column '{col}' has '{unique_values}' unique values.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XAvFoHHB7kIU","executionInfo":{"status":"ok","timestamp":1708074456172,"user_tz":-300,"elapsed":171,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"51b6860e-46b9-4218-9a55-3d2a176ca3a3"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Column 'oc_8' has '1' unique values.\n","Column 'hex_32' has '1' unique values.\n","Column 'puny_coded' has '2' unique values.\n","Column 'Page_Rank' has '1' unique values.\n","Column 'Alexa_Rank' has '8663' unique values.\n","Column 'hex_8' has '1' unique values.\n","Column 'oc_32' has '2' unique values.\n","Column 'len' has '77' unique values.\n","Column 'dec_8' has '1' unique values.\n","Column 'entropy' has '1878' unique values.\n","Column 'numeric_percentage' has '315' unique values.\n","Column 'subdomain' has '3' unique values.\n","Column 'dec_32' has '3' unique values.\n"]}]},{"cell_type":"code","source":["df[numerical_cols].cov()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"PynoUkET78bi","executionInfo":{"status":"ok","timestamp":1708074456173,"user_tz":-300,"elapsed":165,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"228bb3cd-3c49-4e15-8db9-2ef0b2671909"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    oc_8  hex_32    puny_coded  Page_Rank    Alexa_Rank  \\\n","oc_8                 0.0     0.0  0.000000e+00        0.0  0.000000e+00   \n","hex_32               0.0     0.0  0.000000e+00        0.0  0.000000e+00   \n","puny_coded           0.0     0.0  4.682994e-03        0.0 -3.002332e+03   \n","Page_Rank            0.0     0.0  0.000000e+00        0.0  0.000000e+00   \n","Alexa_Rank           0.0     0.0 -3.002332e+03        0.0  3.907441e+12   \n","hex_8                0.0     0.0  0.000000e+00        0.0  0.000000e+00   \n","oc_32                0.0     0.0 -3.752174e-07        0.0 -4.239747e+01   \n","len                  0.0     0.0  1.016979e-02        0.0 -3.487781e+05   \n","dec_8                0.0     0.0  0.000000e+00        0.0  0.000000e+00   \n","entropy              0.0     0.0  2.251160e-03        0.0  1.900666e+04   \n","numeric_percentage   0.0     0.0  4.230893e-02        0.0 -5.947470e+05   \n","subdomain            0.0     0.0 -2.091274e-03        0.0 -6.766032e+04   \n","dec_32               0.0     0.0 -2.082456e-05        0.0 -8.488771e+02   \n","\n","                    hex_8         oc_32            len  dec_8       entropy  \\\n","oc_8                  0.0  0.000000e+00       0.000000    0.0      0.000000   \n","hex_32                0.0  0.000000e+00       0.000000    0.0      0.000000   \n","puny_coded            0.0 -3.752174e-07       0.010170    0.0      0.002251   \n","Page_Rank             0.0  0.000000e+00       0.000000    0.0      0.000000   \n","Alexa_Rank            0.0 -4.239747e+01 -348778.124499    0.0  19006.655059   \n","hex_8                 0.0  0.000000e+00       0.000000    0.0      0.000000   \n","oc_32                 0.0  7.974164e-05      -0.000580    0.0     -0.000067   \n","len                   0.0 -5.798301e-04      50.413738    0.0      3.484792   \n","dec_8                 0.0  0.000000e+00       0.000000    0.0      0.000000   \n","entropy               0.0 -6.667735e-05       3.484792    0.0      0.372322   \n","numeric_percentage    0.0  2.960336e-03      12.068714    0.0      0.540982   \n","subdomain             0.0 -1.550832e-05       1.216102    0.0      0.065474   \n","dec_32                0.0 -3.529587e-07      -0.025083    0.0     -0.005189   \n","\n","                    numeric_percentage     subdomain        dec_32  \n","oc_8                          0.000000      0.000000  0.000000e+00  \n","hex_32                        0.000000      0.000000  0.000000e+00  \n","puny_coded                    0.042309     -0.002091 -2.082456e-05  \n","Page_Rank                     0.000000      0.000000  0.000000e+00  \n","Alexa_Rank              -594747.039323 -67660.318164 -8.488771e+02  \n","hex_8                         0.000000      0.000000  0.000000e+00  \n","oc_32                         0.002960     -0.000016 -3.529587e-07  \n","len                          12.068714      1.216102 -2.508300e-02  \n","dec_8                         0.000000      0.000000  0.000000e+00  \n","entropy                       0.540982      0.065474 -5.188725e-03  \n","numeric_percentage           48.788973      0.169266  1.424681e-01  \n","subdomain                     0.169266      0.246877 -4.121135e-04  \n","dec_32                        0.142468     -0.000412  6.559620e-03  "],"text/html":["\n","  <div id=\"df-e0246eec-eb76-4df9-aa8b-835887f0c92a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>oc_8</th>\n","      <th>hex_32</th>\n","      <th>puny_coded</th>\n","      <th>Page_Rank</th>\n","      <th>Alexa_Rank</th>\n","      <th>hex_8</th>\n","      <th>oc_32</th>\n","      <th>len</th>\n","      <th>dec_8</th>\n","      <th>entropy</th>\n","      <th>numeric_percentage</th>\n","      <th>subdomain</th>\n","      <th>dec_32</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>oc_8</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>hex_32</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>puny_coded</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.682994e-03</td>\n","      <td>0.0</td>\n","      <td>-3.002332e+03</td>\n","      <td>0.0</td>\n","      <td>-3.752174e-07</td>\n","      <td>0.010170</td>\n","      <td>0.0</td>\n","      <td>0.002251</td>\n","      <td>0.042309</td>\n","      <td>-0.002091</td>\n","      <td>-2.082456e-05</td>\n","    </tr>\n","    <tr>\n","      <th>Page_Rank</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Alexa_Rank</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-3.002332e+03</td>\n","      <td>0.0</td>\n","      <td>3.907441e+12</td>\n","      <td>0.0</td>\n","      <td>-4.239747e+01</td>\n","      <td>-348778.124499</td>\n","      <td>0.0</td>\n","      <td>19006.655059</td>\n","      <td>-594747.039323</td>\n","      <td>-67660.318164</td>\n","      <td>-8.488771e+02</td>\n","    </tr>\n","    <tr>\n","      <th>hex_8</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>oc_32</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-3.752174e-07</td>\n","      <td>0.0</td>\n","      <td>-4.239747e+01</td>\n","      <td>0.0</td>\n","      <td>7.974164e-05</td>\n","      <td>-0.000580</td>\n","      <td>0.0</td>\n","      <td>-0.000067</td>\n","      <td>0.002960</td>\n","      <td>-0.000016</td>\n","      <td>-3.529587e-07</td>\n","    </tr>\n","    <tr>\n","      <th>len</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.016979e-02</td>\n","      <td>0.0</td>\n","      <td>-3.487781e+05</td>\n","      <td>0.0</td>\n","      <td>-5.798301e-04</td>\n","      <td>50.413738</td>\n","      <td>0.0</td>\n","      <td>3.484792</td>\n","      <td>12.068714</td>\n","      <td>1.216102</td>\n","      <td>-2.508300e-02</td>\n","    </tr>\n","    <tr>\n","      <th>dec_8</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>entropy</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.251160e-03</td>\n","      <td>0.0</td>\n","      <td>1.900666e+04</td>\n","      <td>0.0</td>\n","      <td>-6.667735e-05</td>\n","      <td>3.484792</td>\n","      <td>0.0</td>\n","      <td>0.372322</td>\n","      <td>0.540982</td>\n","      <td>0.065474</td>\n","      <td>-5.188725e-03</td>\n","    </tr>\n","    <tr>\n","      <th>numeric_percentage</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.230893e-02</td>\n","      <td>0.0</td>\n","      <td>-5.947470e+05</td>\n","      <td>0.0</td>\n","      <td>2.960336e-03</td>\n","      <td>12.068714</td>\n","      <td>0.0</td>\n","      <td>0.540982</td>\n","      <td>48.788973</td>\n","      <td>0.169266</td>\n","      <td>1.424681e-01</td>\n","    </tr>\n","    <tr>\n","      <th>subdomain</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-2.091274e-03</td>\n","      <td>0.0</td>\n","      <td>-6.766032e+04</td>\n","      <td>0.0</td>\n","      <td>-1.550832e-05</td>\n","      <td>1.216102</td>\n","      <td>0.0</td>\n","      <td>0.065474</td>\n","      <td>0.169266</td>\n","      <td>0.246877</td>\n","      <td>-4.121135e-04</td>\n","    </tr>\n","    <tr>\n","      <th>dec_32</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-2.082456e-05</td>\n","      <td>0.0</td>\n","      <td>-8.488771e+02</td>\n","      <td>0.0</td>\n","      <td>-3.529587e-07</td>\n","      <td>-0.025083</td>\n","      <td>0.0</td>\n","      <td>-0.005189</td>\n","      <td>0.142468</td>\n","      <td>-0.000412</td>\n","      <td>6.559620e-03</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e0246eec-eb76-4df9-aa8b-835887f0c92a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e0246eec-eb76-4df9-aa8b-835887f0c92a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e0246eec-eb76-4df9-aa8b-835887f0c92a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-35d6f16f-2cf3-4b07-8c1e-ee2cb0e0e5f2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-35d6f16f-2cf3-4b07-8c1e-ee2cb0e0e5f2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-35d6f16f-2cf3-4b07-8c1e-ee2cb0e0e5f2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[numerical_cols]\",\n  \"rows\": 13,\n  \"fields\": [\n    {\n      \"column\": \"oc_8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"samples\": [\n          0.0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hex_32\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"samples\": [\n          0.0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"puny_coded\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 832.6983573902907,\n        \"min\": -3002.3318492344774,\n        \"max\": 0.04230892822510922,\n        \"samples\": [\n          -0.002091273927330803\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Page_Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"samples\": [\n          0.0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Alexa_Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1083729266803.2991,\n        \"min\": -594747.0393229036,\n        \"max\": 3907441357174.1978,\n        \"samples\": [\n          -67660.31816440888\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hex_8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"samples\": [\n          0.0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oc_32\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.758996145640983,\n        \"min\": -42.39746532952554,\n        \"max\": 0.0029603364827140307,\n        \"samples\": [\n          -1.5508321719319155e-05\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"len\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 96735.2004684155,\n        \"min\": -348778.1244994647,\n        \"max\": 50.41373820063553,\n        \"samples\": [\n          1.2161021938371657\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dec_8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"samples\": [\n          0.0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"entropy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5271.394636859707,\n        \"min\": -0.005188725301581009,\n        \"max\": 19006.65505896926,\n        \"samples\": [\n          0.06547394260391015\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"numeric_percentage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 164954.57759474913,\n        \"min\": -594747.0393229036,\n        \"max\": 48.78897308327687,\n        \"samples\": [\n          0.16926606837329405\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subdomain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18765.635064513113,\n        \"min\": -67660.31816440888,\n        \"max\": 1.2161021938371657,\n        \"samples\": [\n          0.2468766593874439\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dec_32\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 235.43888493416512,\n        \"min\": -848.8770989854328,\n        \"max\": 0.14246814696611623,\n        \"samples\": [\n          -0.000412113474163418\n        ],\n        \"num_unique_values\": 9,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df[numerical_cols].head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"rypctL1y-Cgo","executionInfo":{"status":"ok","timestamp":1708074456174,"user_tz":-300,"elapsed":161,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"9687070a-11ab-4780-f9af-a316f22a2224"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   oc_8  hex_32  puny_coded  Page_Rank  Alexa_Rank  hex_8  oc_32  len  dec_8  \\\n","0     0       0           0         -1        -1.0      0      0    8      0   \n","1     0       0           0         -1        -1.0      0      0    8      0   \n","2     0       0           0         -1   7119972.0      0      0    8      0   \n","3     0       0           0         -1   7119972.0      0      0   10      0   \n","4     0       0           0         -1        -1.0      0      0    8      0   \n","\n","    entropy  numeric_percentage  subdomain  dec_32  \n","0  1.780639           53.846154        0.0       0  \n","1  2.625000            0.000000        0.0       0  \n","2  2.625000            0.000000        0.0       0  \n","3  2.989735            0.000000        1.0       0  \n","4  2.030639           53.846154        0.0       0  "],"text/html":["\n","  <div id=\"df-7169940f-c596-4567-b6e8-e61133693da2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>oc_8</th>\n","      <th>hex_32</th>\n","      <th>puny_coded</th>\n","      <th>Page_Rank</th>\n","      <th>Alexa_Rank</th>\n","      <th>hex_8</th>\n","      <th>oc_32</th>\n","      <th>len</th>\n","      <th>dec_8</th>\n","      <th>entropy</th>\n","      <th>numeric_percentage</th>\n","      <th>subdomain</th>\n","      <th>dec_32</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>-1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>1.780639</td>\n","      <td>53.846154</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>-1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>2.625000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>7119972.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>2.625000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>7119972.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>2.989735</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>-1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>2.030639</td>\n","      <td>53.846154</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7169940f-c596-4567-b6e8-e61133693da2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7169940f-c596-4567-b6e8-e61133693da2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7169940f-c596-4567-b6e8-e61133693da2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9f7458af-80ab-40db-9768-0556822b558c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9f7458af-80ab-40db-9768-0556822b558c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9f7458af-80ab-40db-9768-0556822b558c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[numerical_cols]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"oc_8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"samples\": [\n          0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hex_32\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"samples\": [\n          0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"puny_coded\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"samples\": [\n          0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Page_Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": -1,\n        \"max\": -1,\n        \"samples\": [\n          -1\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Alexa_Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3899769.82092773,\n        \"min\": -1.0,\n        \"max\": 7119972.0,\n        \"samples\": [\n          7119972.0\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hex_8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"samples\": [\n          0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oc_32\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"samples\": [\n          0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"len\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 8,\n        \"max\": 10,\n        \"samples\": [\n          10\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dec_8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"samples\": [\n          0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"entropy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49207537707523175,\n        \"min\": 1.7806390622,\n        \"max\": 2.9897352854,\n        \"samples\": [\n          2.625\n        ],\n        \"num_unique_values\": 4,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"numeric_percentage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.4927530964573,\n        \"min\": 0.0,\n        \"max\": 53.8461538462,\n        \"samples\": [\n          0.0\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subdomain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.447213595499958,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"samples\": [\n          1.0\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dec_32\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"samples\": [\n          0\n        ],\n        \"num_unique_values\": 1,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df = df.drop(columns=['oc_8', 'hex_32', 'Page_Rank', 'hex_8', 'dec_8','oc_32','dec_32'], axis=1)"],"metadata":{"id":"tgndYQgO8B3K","executionInfo":{"status":"ok","timestamp":1708074456174,"user_tz":-300,"elapsed":154,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["# Filter remaining numerical columns\n","remaining_numerical_cols = [col for col in df.columns if col in numerical_cols]\n","\n","# Print unique values for remaining numerical columns\n","for col in remaining_numerical_cols:\n","    unique_values = df[col].nunique()\n","    print(f\"Column '{col}' has '{unique_values}' unique values.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TFhCmxJCAuO1","executionInfo":{"status":"ok","timestamp":1708074456175,"user_tz":-300,"elapsed":153,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"2dffd843-2784-43ac-d10c-daa35f2f36f8"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Column 'puny_coded' has '2' unique values.\n","Column 'Alexa_Rank' has '8663' unique values.\n","Column 'len' has '77' unique values.\n","Column 'entropy' has '1878' unique values.\n","Column 'numeric_percentage' has '315' unique values.\n","Column 'subdomain' has '3' unique values.\n"]}]},{"cell_type":"code","source":["remaining_numerical_cols"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sYha5TnYEQ6P","executionInfo":{"status":"ok","timestamp":1708074456176,"user_tz":-300,"elapsed":146,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"dbeaec81-927c-4259-e07f-bbb4333a4ef6"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['puny_coded',\n"," 'Alexa_Rank',\n"," 'len',\n"," 'entropy',\n"," 'numeric_percentage',\n"," 'subdomain']"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["df['label'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tmTR6cp1LCk_","executionInfo":{"status":"ok","timestamp":1708074500159,"user_tz":-300,"elapsed":10,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"37cdfb34-0ced-4211-b79d-f1db4a00188c"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['spam', 'phishing', 'malware', 'benign'], dtype=object)"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Define mapping dictionary\n","label_mapping = {'spam': 0, 'phishing': 1, 'malware': 2, 'benign': 3}\n","\n","# Replace labels in 'label' column\n","df['label'] = df['label'].map(label_mapping)\n","\n","# Now the labels in the 'label' column have been mapped to numerical values"],"metadata":{"id":"f0mUFFD8LZYz","executionInfo":{"status":"ok","timestamp":1708074576626,"user_tz":-300,"elapsed":7,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.preprocessing import LabelEncoder, StandardScaler\n","from sklearn.impute import SimpleImputer\n","from sklearn.compose import ColumnTransformer\n","from sklearn.pipeline import Pipeline\n","from sklearn.base import BaseEstimator, TransformerMixin"],"metadata":{"id":"a_bJrNNzCBZy","executionInfo":{"status":"ok","timestamp":1708074579086,"user_tz":-300,"elapsed":761,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["# Select categorical columns\n","categorical_columns = ['Domain_Age', 'sld', 'Emails', 'Domain_Name', '3gram', 'distance_from_bad_words',\n","                       'Country', 'typos', 'Registrar', '2gram', 'State', '1gram', 'obfuscate_at_sign',\n","                       'Registrant_Name', 'char_distribution', 'shortened', 'longest_word',\n","                       'Name_Server_Count', 'Creation_Date_Time', 'Organization', 'tld']\n","\n","# Apply label encoding to each categorical column\n","label_encoders = {}\n","for col in categorical_columns:\n","    label_encoders[col] = LabelEncoder()\n","    df[col] = label_encoders[col].fit_transform(df[col])\n","\n","# Now the categorical columns have been label encoded\n"],"metadata":{"id":"qfMycIpDFIEo","executionInfo":{"status":"ok","timestamp":1708074581187,"user_tz":-300,"elapsed":591,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"F9kxB5jzag0X","executionInfo":{"status":"ok","timestamp":1708074582648,"user_tz":-300,"elapsed":28,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"facb75e2-9c40-4509-9ba6-92e919e4d9c2"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Domain_Age   sld  Emails  Domain_Name  puny_coded  Alexa_Rank  3gram  \\\n","0        3974   361     871         6351           0        -1.0     33   \n","1        3975  8188     871         9423           0        -1.0   8106   \n","2        1908  8188     871         9422           0   7119972.0   8106   \n","3        1909  8188     871         9422           0   7119972.0   8106   \n","4        3976   363     871         6352           0        -1.0     34   \n","\n","   distance_from_bad_words  Country  len  typos  Registrar  2gram  State  \\\n","0                      135       83    8   2139        424     33    963   \n","1                     7824       83    8   2097        424   8185    963   \n","2                     7824       83    8   2139        424   8185    963   \n","3                     7824       83   10   2139        424   8185    963   \n","4                      232       83    8   2139        424     34    963   \n","\n","   1gram  obfuscate_at_sign   entropy  numeric_percentage  Registrant_Name  \\\n","0     33                  0  1.780639           53.846154              244   \n","1   8188                  0  2.625000            0.000000              244   \n","2   8188                  0  2.625000            0.000000              244   \n","3   8188                  0  2.989735            0.000000              244   \n","4     34                  0  2.030639           53.846154              244   \n","\n","   subdomain  char_distribution  shortened  longest_word  Name_Server_Count  \\\n","0        0.0                138          0            10                 39   \n","1        0.0               6391          0          2371                 54   \n","2        0.0               6391          0          2371                 54   \n","3        1.0               6568          0          2371                 54   \n","4        0.0                228          0             1                 39   \n","\n","   Creation_Date_Time  Organization  tld  label  \n","0               12033          3480   80      0  \n","1               12023          3480  289      0  \n","2                8730          3480   80      0  \n","3                8730          3480   80      0  \n","4               12025          3480   80      0  "],"text/html":["\n","  <div id=\"df-959b8e09-e803-4802-930e-b5fda25f049d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Domain_Age</th>\n","      <th>sld</th>\n","      <th>Emails</th>\n","      <th>Domain_Name</th>\n","      <th>puny_coded</th>\n","      <th>Alexa_Rank</th>\n","      <th>3gram</th>\n","      <th>distance_from_bad_words</th>\n","      <th>Country</th>\n","      <th>len</th>\n","      <th>typos</th>\n","      <th>Registrar</th>\n","      <th>2gram</th>\n","      <th>State</th>\n","      <th>1gram</th>\n","      <th>obfuscate_at_sign</th>\n","      <th>entropy</th>\n","      <th>numeric_percentage</th>\n","      <th>Registrant_Name</th>\n","      <th>subdomain</th>\n","      <th>char_distribution</th>\n","      <th>shortened</th>\n","      <th>longest_word</th>\n","      <th>Name_Server_Count</th>\n","      <th>Creation_Date_Time</th>\n","      <th>Organization</th>\n","      <th>tld</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3974</td>\n","      <td>361</td>\n","      <td>871</td>\n","      <td>6351</td>\n","      <td>0</td>\n","      <td>-1.0</td>\n","      <td>33</td>\n","      <td>135</td>\n","      <td>83</td>\n","      <td>8</td>\n","      <td>2139</td>\n","      <td>424</td>\n","      <td>33</td>\n","      <td>963</td>\n","      <td>33</td>\n","      <td>0</td>\n","      <td>1.780639</td>\n","      <td>53.846154</td>\n","      <td>244</td>\n","      <td>0.0</td>\n","      <td>138</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>39</td>\n","      <td>12033</td>\n","      <td>3480</td>\n","      <td>80</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3975</td>\n","      <td>8188</td>\n","      <td>871</td>\n","      <td>9423</td>\n","      <td>0</td>\n","      <td>-1.0</td>\n","      <td>8106</td>\n","      <td>7824</td>\n","      <td>83</td>\n","      <td>8</td>\n","      <td>2097</td>\n","      <td>424</td>\n","      <td>8185</td>\n","      <td>963</td>\n","      <td>8188</td>\n","      <td>0</td>\n","      <td>2.625000</td>\n","      <td>0.000000</td>\n","      <td>244</td>\n","      <td>0.0</td>\n","      <td>6391</td>\n","      <td>0</td>\n","      <td>2371</td>\n","      <td>54</td>\n","      <td>12023</td>\n","      <td>3480</td>\n","      <td>289</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1908</td>\n","      <td>8188</td>\n","      <td>871</td>\n","      <td>9422</td>\n","      <td>0</td>\n","      <td>7119972.0</td>\n","      <td>8106</td>\n","      <td>7824</td>\n","      <td>83</td>\n","      <td>8</td>\n","      <td>2139</td>\n","      <td>424</td>\n","      <td>8185</td>\n","      <td>963</td>\n","      <td>8188</td>\n","      <td>0</td>\n","      <td>2.625000</td>\n","      <td>0.000000</td>\n","      <td>244</td>\n","      <td>0.0</td>\n","      <td>6391</td>\n","      <td>0</td>\n","      <td>2371</td>\n","      <td>54</td>\n","      <td>8730</td>\n","      <td>3480</td>\n","      <td>80</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1909</td>\n","      <td>8188</td>\n","      <td>871</td>\n","      <td>9422</td>\n","      <td>0</td>\n","      <td>7119972.0</td>\n","      <td>8106</td>\n","      <td>7824</td>\n","      <td>83</td>\n","      <td>10</td>\n","      <td>2139</td>\n","      <td>424</td>\n","      <td>8185</td>\n","      <td>963</td>\n","      <td>8188</td>\n","      <td>0</td>\n","      <td>2.989735</td>\n","      <td>0.000000</td>\n","      <td>244</td>\n","      <td>1.0</td>\n","      <td>6568</td>\n","      <td>0</td>\n","      <td>2371</td>\n","      <td>54</td>\n","      <td>8730</td>\n","      <td>3480</td>\n","      <td>80</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3976</td>\n","      <td>363</td>\n","      <td>871</td>\n","      <td>6352</td>\n","      <td>0</td>\n","      <td>-1.0</td>\n","      <td>34</td>\n","      <td>232</td>\n","      <td>83</td>\n","      <td>8</td>\n","      <td>2139</td>\n","      <td>424</td>\n","      <td>34</td>\n","      <td>963</td>\n","      <td>34</td>\n","      <td>0</td>\n","      <td>2.030639</td>\n","      <td>53.846154</td>\n","      <td>244</td>\n","      <td>0.0</td>\n","      <td>228</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>39</td>\n","      <td>12025</td>\n","      <td>3480</td>\n","      <td>80</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-959b8e09-e803-4802-930e-b5fda25f049d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-959b8e09-e803-4802-930e-b5fda25f049d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-959b8e09-e803-4802-930e-b5fda25f049d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-55964e54-4c15-4a17-95c0-130a60243a76\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-55964e54-4c15-4a17-95c0-130a60243a76')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-55964e54-4c15-4a17-95c0-130a60243a76 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# Define the file path for the new CSV file\n","#new_csv_file_path = \"V1_project.csv\"\n","\n","# Save the modified DataFrame to a new CSV file\n","#df.to_csv(new_csv_file_path, index=False)\n","\n","#print(f\"DataFrame with dropped columns saved to '{new_csv_file_path}'.\")"],"metadata":{"id":"aFX6rZejajRl","executionInfo":{"status":"ok","timestamp":1708074597092,"user_tz":-300,"elapsed":12,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p2M3COssbh0E","executionInfo":{"status":"ok","timestamp":1708074599416,"user_tz":-300,"elapsed":6,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"9aa767eb-259f-4670-f208-9569a73583c9"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Domain_Age', 'sld', 'Emails', 'Domain_Name', 'puny_coded',\n","       'Alexa_Rank', '3gram', 'distance_from_bad_words', 'Country', 'len',\n","       'typos', 'Registrar', '2gram', 'State', '1gram', 'obfuscate_at_sign',\n","       'entropy', 'numeric_percentage', 'Registrant_Name', 'subdomain',\n","       'char_distribution', 'shortened', 'longest_word', 'Name_Server_Count',\n","       'Creation_Date_Time', 'Organization', 'tld', 'label'],\n","      dtype='object')"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["from sklearn.preprocessing import MinMaxScaler\n","\n","# Select numerical columns\n","numerical_columns = ['Domain_Age', 'sld', 'Emails', 'Domain_Name', 'puny_coded',\n","       'Alexa_Rank', '3gram', 'distance_from_bad_words', 'Country', 'len',\n","       'typos', 'Registrar', '2gram', 'State', '1gram', 'obfuscate_at_sign',\n","       'entropy', 'numeric_percentage', 'Registrant_Name', 'subdomain',\n","       'char_distribution', 'shortened', 'longest_word', 'Name_Server_Count',\n","       'Creation_Date_Time', 'Organization', 'tld']\n","\n","# Initialize MinMaxScaler\n","scaler = MinMaxScaler()\n","\n","# Apply MinMaxScaler to each numerical column\n","df[numerical_columns] = scaler.fit_transform(df[numerical_columns])\n","\n","# Now the numerical columns have been scaled using MinMaxScaler\n"],"metadata":{"id":"OG94E_2UfKwa","executionInfo":{"status":"ok","timestamp":1708074600947,"user_tz":-300,"elapsed":5,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"wlR-d_WNgD1M","executionInfo":{"status":"ok","timestamp":1708074602557,"user_tz":-300,"elapsed":19,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"c16707b0-efd3-4fbd-e261-b97fa975503c"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Domain_Age       sld    Emails  Domain_Name  puny_coded  Alexa_Rank  \\\n","0    0.098986  0.022097  0.158565     0.425841         0.0    0.000000   \n","1    0.099011  0.501194  0.158565     0.631822         0.0    0.000000   \n","2    0.047525  0.501194  0.158565     0.631755         0.0    0.582426   \n","3    0.047550  0.501194  0.158565     0.631755         0.0    0.582426   \n","4    0.099036  0.022220  0.158565     0.425909         0.0    0.000000   \n","\n","      3gram  distance_from_bad_words   Country       len     typos  Registrar  \\\n","0  0.002040                 0.008236  0.384259  0.045455  0.672008   0.410455   \n","1  0.501020                 0.477306  0.384259  0.045455  0.658812   0.410455   \n","2  0.501020                 0.477306  0.384259  0.045455  0.672008   0.410455   \n","3  0.501020                 0.477306  0.384259  0.058442  0.672008   0.410455   \n","4  0.002101                 0.014153  0.384259  0.045455  0.672008   0.410455   \n","\n","      2gram     State     1gram  obfuscate_at_sign   entropy  \\\n","0  0.002021  0.741339  0.002020                0.0  0.373552   \n","1  0.501255  0.741339  0.501132                0.0  0.550686   \n","2  0.501255  0.741339  0.501132                0.0  0.550686   \n","3  0.501255  0.741339  0.501132                0.0  0.627202   \n","4  0.002082  0.741339  0.002081                0.0  0.425998   \n","\n","   numeric_percentage  Registrant_Name  subdomain  char_distribution  \\\n","0            0.762821         0.559633        0.0           0.005983   \n","1            0.000000         0.559633        0.0           0.277086   \n","2            0.000000         0.559633        0.0           0.277086   \n","3            0.000000         0.559633        1.0           0.284760   \n","4            0.762821         0.559633        0.0           0.009885   \n","\n","   shortened  longest_word  Name_Server_Count  Creation_Date_Time  \\\n","0        0.0      0.001178           0.672414            0.958881   \n","1        0.0      0.279336           0.931034            0.958084   \n","2        0.0      0.279336           0.931034            0.695673   \n","3        0.0      0.279336           0.931034            0.695673   \n","4        0.0      0.000118           0.672414            0.958244   \n","\n","   Organization       tld  label  \n","0       0.86096  0.179372      0  \n","1       0.86096  0.647982      0  \n","2       0.86096  0.179372      0  \n","3       0.86096  0.179372      0  \n","4       0.86096  0.179372      0  "],"text/html":["\n","  <div id=\"df-19c0d12e-b54b-423d-9e4a-e1517234f977\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Domain_Age</th>\n","      <th>sld</th>\n","      <th>Emails</th>\n","      <th>Domain_Name</th>\n","      <th>puny_coded</th>\n","      <th>Alexa_Rank</th>\n","      <th>3gram</th>\n","      <th>distance_from_bad_words</th>\n","      <th>Country</th>\n","      <th>len</th>\n","      <th>typos</th>\n","      <th>Registrar</th>\n","      <th>2gram</th>\n","      <th>State</th>\n","      <th>1gram</th>\n","      <th>obfuscate_at_sign</th>\n","      <th>entropy</th>\n","      <th>numeric_percentage</th>\n","      <th>Registrant_Name</th>\n","      <th>subdomain</th>\n","      <th>char_distribution</th>\n","      <th>shortened</th>\n","      <th>longest_word</th>\n","      <th>Name_Server_Count</th>\n","      <th>Creation_Date_Time</th>\n","      <th>Organization</th>\n","      <th>tld</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.098986</td>\n","      <td>0.022097</td>\n","      <td>0.158565</td>\n","      <td>0.425841</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.002040</td>\n","      <td>0.008236</td>\n","      <td>0.384259</td>\n","      <td>0.045455</td>\n","      <td>0.672008</td>\n","      <td>0.410455</td>\n","      <td>0.002021</td>\n","      <td>0.741339</td>\n","      <td>0.002020</td>\n","      <td>0.0</td>\n","      <td>0.373552</td>\n","      <td>0.762821</td>\n","      <td>0.559633</td>\n","      <td>0.0</td>\n","      <td>0.005983</td>\n","      <td>0.0</td>\n","      <td>0.001178</td>\n","      <td>0.672414</td>\n","      <td>0.958881</td>\n","      <td>0.86096</td>\n","      <td>0.179372</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.099011</td>\n","      <td>0.501194</td>\n","      <td>0.158565</td>\n","      <td>0.631822</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.501020</td>\n","      <td>0.477306</td>\n","      <td>0.384259</td>\n","      <td>0.045455</td>\n","      <td>0.658812</td>\n","      <td>0.410455</td>\n","      <td>0.501255</td>\n","      <td>0.741339</td>\n","      <td>0.501132</td>\n","      <td>0.0</td>\n","      <td>0.550686</td>\n","      <td>0.000000</td>\n","      <td>0.559633</td>\n","      <td>0.0</td>\n","      <td>0.277086</td>\n","      <td>0.0</td>\n","      <td>0.279336</td>\n","      <td>0.931034</td>\n","      <td>0.958084</td>\n","      <td>0.86096</td>\n","      <td>0.647982</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.047525</td>\n","      <td>0.501194</td>\n","      <td>0.158565</td>\n","      <td>0.631755</td>\n","      <td>0.0</td>\n","      <td>0.582426</td>\n","      <td>0.501020</td>\n","      <td>0.477306</td>\n","      <td>0.384259</td>\n","      <td>0.045455</td>\n","      <td>0.672008</td>\n","      <td>0.410455</td>\n","      <td>0.501255</td>\n","      <td>0.741339</td>\n","      <td>0.501132</td>\n","      <td>0.0</td>\n","      <td>0.550686</td>\n","      <td>0.000000</td>\n","      <td>0.559633</td>\n","      <td>0.0</td>\n","      <td>0.277086</td>\n","      <td>0.0</td>\n","      <td>0.279336</td>\n","      <td>0.931034</td>\n","      <td>0.695673</td>\n","      <td>0.86096</td>\n","      <td>0.179372</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.047550</td>\n","      <td>0.501194</td>\n","      <td>0.158565</td>\n","      <td>0.631755</td>\n","      <td>0.0</td>\n","      <td>0.582426</td>\n","      <td>0.501020</td>\n","      <td>0.477306</td>\n","      <td>0.384259</td>\n","      <td>0.058442</td>\n","      <td>0.672008</td>\n","      <td>0.410455</td>\n","      <td>0.501255</td>\n","      <td>0.741339</td>\n","      <td>0.501132</td>\n","      <td>0.0</td>\n","      <td>0.627202</td>\n","      <td>0.000000</td>\n","      <td>0.559633</td>\n","      <td>1.0</td>\n","      <td>0.284760</td>\n","      <td>0.0</td>\n","      <td>0.279336</td>\n","      <td>0.931034</td>\n","      <td>0.695673</td>\n","      <td>0.86096</td>\n","      <td>0.179372</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.099036</td>\n","      <td>0.022220</td>\n","      <td>0.158565</td>\n","      <td>0.425909</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.002101</td>\n","      <td>0.014153</td>\n","      <td>0.384259</td>\n","      <td>0.045455</td>\n","      <td>0.672008</td>\n","      <td>0.410455</td>\n","      <td>0.002082</td>\n","      <td>0.741339</td>\n","      <td>0.002081</td>\n","      <td>0.0</td>\n","      <td>0.425998</td>\n","      <td>0.762821</td>\n","      <td>0.559633</td>\n","      <td>0.0</td>\n","      <td>0.009885</td>\n","      <td>0.0</td>\n","      <td>0.000118</td>\n","      <td>0.672414</td>\n","      <td>0.958244</td>\n","      <td>0.86096</td>\n","      <td>0.179372</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19c0d12e-b54b-423d-9e4a-e1517234f977')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-19c0d12e-b54b-423d-9e4a-e1517234f977 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-19c0d12e-b54b-423d-9e4a-e1517234f977');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1a856c8f-2cf4-4a8c-aeaa-3786cfcbe86a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1a856c8f-2cf4-4a8c-aeaa-3786cfcbe86a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1a856c8f-2cf4-4a8c-aeaa-3786cfcbe86a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["# Define the file path for the new CSV file\n","#new_csv_file_path = \"V1_project_for_model.csv\"\n","\n","# Save the modified DataFrame to a new CSV file\n","#df.to_csv(new_csv_file_path, index=False)\n","\n","#print(f\"DataFrame with dropped columns saved to '{new_csv_file_path}'.\")"],"metadata":{"id":"Zw3qw_B8gYvx","executionInfo":{"status":"ok","timestamp":1708074620458,"user_tz":-300,"elapsed":4,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","from xgboost import XGBClassifier\n","from sklearn.neural_network import MLPClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, confusion_matrix"],"metadata":{"id":"QKHM7v8Zgc6w","executionInfo":{"status":"ok","timestamp":1708074959667,"user_tz":-300,"elapsed":461,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["# Split the features and labels\n","X = df.drop('label', axis=1)\n","y = df['label']\n","\n","# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"id":"8I_tf8KFkGQl","executionInfo":{"status":"ok","timestamp":1708074961737,"user_tz":-300,"elapsed":10,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["# Random Forest\n","rf_model = RandomForestClassifier()\n","rf_model.fit(X_train, y_train)\n","rf_predictions = rf_model.predict(X_test)\n","rf_accuracy = accuracy_score(y_test, rf_predictions)\n","rf_cm = confusion_matrix(y_test, rf_predictions)\n","print(\"Random Forest Accuracy:\", rf_accuracy)\n","print(\"Random Forest Confusion Matrix:\")\n","print(rf_cm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4pHtoixzkHq9","executionInfo":{"status":"ok","timestamp":1708074985682,"user_tz":-300,"elapsed":12164,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"44f18bfb-329d-49de-d472-232d485c112b"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["Random Forest Accuracy: 0.9703947368421053\n","Random Forest Confusion Matrix:\n","[[ 892    0    0    0]\n"," [   0 2422   73   46]\n"," [   0   54 1640   58]\n"," [   0   10   56 4781]]\n"]}]},{"cell_type":"code","source":["# Gradient Boosting (XGBoost)\n","xgb_model = XGBClassifier()\n","xgb_model.fit(X_train, y_train)\n","xgb_predictions = xgb_model.predict(X_test)\n","xgb_accuracy = accuracy_score(y_test, xgb_predictions)\n","xgb_cm = confusion_matrix(y_test, xgb_predictions)\n","print(\"XGBoost Accuracy:\", xgb_accuracy)\n","print(\"XGBoost Confusion Matrix:\")\n","print(xgb_cm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yzIsAjjlkI55","executionInfo":{"status":"ok","timestamp":1708074987791,"user_tz":-300,"elapsed":2119,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"5942e82e-026a-4fbc-e2aa-d38e55c7272d"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["XGBoost Accuracy: 0.981658692185008\n","XGBoost Confusion Matrix:\n","[[ 892    0    0    0]\n"," [   0 2476   40   25]\n"," [   0   49 1666   37]\n"," [   0   12   21 4814]]\n"]}]},{"cell_type":"code","source":["# Neural Network\n","nn_model = MLPClassifier()\n","nn_model.fit(X_train, y_train)\n","nn_predictions = nn_model.predict(X_test)\n","nn_accuracy = accuracy_score(y_test, nn_predictions)\n","nn_cm = confusion_matrix(y_test, nn_predictions)\n","print(\"Neural Network Accuracy:\", nn_accuracy)\n","print(\"Neural Network Confusion Matrix:\")\n","print(nn_cm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BwWTDVslkKTD","executionInfo":{"status":"ok","timestamp":1708075026608,"user_tz":-300,"elapsed":38844,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"3e708173-0b9d-4925-9cc5-cea5462e5a2f"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["Neural Network Accuracy: 0.9044059011164274\n","Neural Network Confusion Matrix:\n","[[ 892    0    0    0]\n"," [   0 2099  272  170]\n"," [   0  201 1364  187]\n"," [   0   41   88 4718]]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:686: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["# Plotting Confusion Matrix\n","models = ['Random Forest', 'XGBoost', 'Neural Network']\n","cms = [rf_cm, xgb_cm, nn_cm]\n","\n","fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(15, 5))\n","\n","for i, ax in enumerate(axes):\n","    sns.heatmap(cms[i], annot=True, fmt='d', cmap='Blues', ax=ax)\n","    ax.set_xlabel('Predicted Labels')\n","    ax.set_ylabel('True Labels')\n","    ax.set_title(models[i])\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":507},"id":"1HKaokvAMpyX","executionInfo":{"status":"ok","timestamp":1708075027598,"user_tz":-300,"elapsed":1003,"user":{"displayName":"Muhammad Abuzar","userId":"18309048335817189121"}},"outputId":"550ff0d0-2cf5-48ea-ed77-771e84887150"},"execution_count":42,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 6 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"yO2YoTkCNVUU"},"execution_count":null,"outputs":[]}]}